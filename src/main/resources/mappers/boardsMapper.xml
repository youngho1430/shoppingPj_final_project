<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.group6.shopping.batis.BoardsDAO">
	<resultMap id="BoardsVO" type="BoardsVO">
		<result column="board_id" property="board_id"/>
		<result column="model_id" property="model_id"/>
		<result column="board_rate" property="board_rate"/>
		<result column="mem_id" property="mem_id"/>
		<result column="board_title" property="board_title"/>
		<result column="board_content" property="board_content"/>
		<result column="board_type" property="board_type"/>
		<result column="board_date" property="board_date"/>
		<result column="board_titleimg" property="board_titleimg"/>

		<collection property="specVO" resultMap="SpecVO"/>
		<collection property="modelsVO" resultMap="ModelsVO"/>
		<collection property="productsVO" resultMap="ProductsVO"/>

		<collection property="repliesVOList" column="{board_id = board_id}" ofType="RepliesVO" select="selectReplies"/>
		<collection property="filesVOList" column="{board_id = board_id}" ofType="FilesVO" select="selectFiles"/>
	</resultMap>
	<resultMap id="SpecVO" type="SpecVO">
		<result column="spec_id" property="spec_id"/>

		<result column="spec_weight" property="spec_weight"/>
		<result column="spec_price" property="spec_price"/>
		<result column="spec_processor" property="spec_processor"/>
		<result column="spec_display" property="spec_display"/>
		<result column="spec_network" property="spec_network"/>

		<result column="spec_memory" property="spec_memory"/>
		<result column="spec_color" property="spec_color"/>
	</resultMap>
	<resultMap id="ModelsVO" type="ModelsVO">
		<result column="model_id" property="model_id" />
		<result column="product_id" property="product_id" />
		<result column="model_name" property="model_name" />
	</resultMap>
	<resultMap id="ProductsVO" type="ProductsVO">
		<result column="product_id" property="product_id"/>
		<result column="product_name" property="product_name"/>
	</resultMap>


	<select id="viewBoard" resultMap="BoardsVO">
		select *
		from boards b, specifications s, models m, products p
		where b.spec_id = s.spec_id and s.model_id = m.model_id and m.product_id = p.product_id
		  and b.board_id = #{board_id};
	</select>

	<select id="selectReplies" resultType="RepliesVO">
		select *
		from replies
		where board_id = #{board_id}
		order by reply_id asc;
	</select>

	<select id="selectFiles" resultType="FilesVO">
		select *
		from files
		where board_id = #{board_id};
	</select>

	<select id="getModelBoards" resultMap="BoardsVO">
		select * from boards b, specifications s, models m, products p
		where b.spec_id = s.spec_id and s.model_id = m.model_id and m.product_id = p.product_id
		      and b.model_id = #{modelsVO.model_id}
		order by ${cateMap.field} ${cateMap.order}
		limit #{pagingVO.numOfBoards} offset #{pagingVO.offset}
	</select>

	<select id="getNumOfBoards" resultType="int">
		select count(*)
		from boards
		where model_id = #{model_id}
	</select>

	<select id="sumOfBoardRate" resultType="int">
		select sum(board_rate)
		from boards
		where model_id = #{model_id}
	</select>
	
	<select id="avgOfBoardRate" resultType="double">
		select round(sum(board_rate) / count(*),2)
		from boards
		where model_id = #{model_id}
	</select>

	<select id="numOfBoardRate" resultType="int">
		select count(*)
		from boards
		where model_id = #{model_id}
		group by board_rate
		order by board_rate desc;
	</select>

	<select id="boardRateList" resultType="int">
		select board_rate
		from boards
		where model_id = #{model_id}
		group by board_rate
		order by board_rate desc;
	</select>

<!-- 이벤트 메인페이지 진행중게시글 목록조회 -->

<select id="EventBoardslist" resultType="BoardsVO">
<![CDATA[SELECT * FROM(SELECT @rownum:=@rownum+1 rnum, A.* FROM boards A, (SELECT @ROWNUM := 0) R 
			WHERE 1=1 and board_type = 'event'
			AND date(now()) >= s_date
			AND e_date >= date(now()) order by e_date) list 
			WHERE rnum >= #{start} AND rnum <= #{end}]]>
</select>

	
	
	<!-- 이벤트 메인페이지 종료게시글 목록조회 -->
	<select id="EndEventBoardslist" resultType="BoardsVO">
			<![CDATA[SELECT * FROM(SELECT @rownum:=@rownum+1 rnum, A.* FROM boards A, (SELECT @ROWNUM := 0) R 
			WHERE 1=1 and board_type = 'event'
			AND date(now()) > e_date
			order by e_date desc) list 
			WHERE rnum >= #{start} AND rnum <= #{end}]]>
	</select>
	

	
	<!-- 이벤트 게시글 보기 -->
	<select id="read" parameterType="int" resultType="BoardsVO">
		SELECT *
			FROM boards
			WHERE board_id = #{board_id}	
	
	</select>
	<!-- 이벤트 글등록 -->
	 <select id="eventinsert">
		insert into boards (board_id,mem_id,board_title,board_content,board_date,board_type,s_date,e_date,board_titleimg)
		values (null,#{mem_id},#{board_title},#{board_content},SYSDATE(),#{board_type},#{s_date},#{e_date},#{board_titleimg})
	</select> 
		
	<!-- 리뷰 글등록 -->
	<select id="reviewinsert">
	insert into boards
	values (null, #{mem_id}, #{spec_id}, #{model_id}, #{board_rate}, #{board_title}, #{board_content}, SYSDATE(), #{board_type}, null, null,null)
	</select>
		
	<!-- 리뷰 글수정 -->
	<update id="reviewupdate">
	update boards
	set board_rate = #{board_rate}, board_title = #{board_title}, board_content = #{board_content}, board_date = SYSDATE()
	where board_id = #{board_id}
	</update>
	
	
	<!--  이벤트글삭제 -->
	<select id="delete">
	 delete from boards WHERE board_id = #{board_id}
	</select>


<!-- 진행중 이벤트 총 게시글 갯수 출력 -->
<select id="countBoard" resultType="int">
	SELECT COUNT(*) FROM boards where board_type = 'event'
			AND date(now()) >= s_date
			AND e_date >= date(now())
</select>

<!-- 종료이벤트 총 게시글 갯수 출력 -->
<select id="endcountBoard" resultType="int">
	SELECT COUNT(*) FROM boards 
			WHERE board_type = 'event'
			AND date(now()) > e_date
			order by e_date desc;
</select>


	<select id="eventMainDisplay" resultMap="BoardsVO">
		select board_id, board_title, board_titleimg from boards
		where board_type = 'event' and e_date >= now()
		order by e_date asc
			limit 5;
	</select>

</mapper>